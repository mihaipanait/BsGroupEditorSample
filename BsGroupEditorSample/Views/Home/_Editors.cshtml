@model BsGroupEditorSample.Models.GroupEditorViewModel
@using BForms.Html
@using BsGroupEditorSample.Mock

@{
    var builder = Html.BsGroupEditorFor(x => x.Editor);

    builder.ConfigureTabs(cfg =>
    {
        var tab1 = cfg.For(x => x.Tab1)
            //.Editable()
            .Template(x => x.Grid, "_TabItem")
            .Template(x => x.Search, "~/Views/Home/_Search.cshtml")
            //.Template(x => x.New, "~/Areas/Demo/Views/Contributors/Toolbar/_New.cshtml")
            .ConnectsWith(MenuTypes.PublicMenu, MenuTypes.UsersMenu, MenuTypes.AdminMenu);

        var tab2 = cfg.For(x => x.Tab2)
            .Template(x => x.Grid, "_TabItem")
            //.Template(x => x.Search, "~/Views/Home/_Search.cshtml")
            //.Template(x => x.New, "~/Areas/Demo/Views/Contributors/Toolbar/_New.cshtml")
            .ConnectsWith(MenuTypes.UsersMenu);

        var tab3 = cfg.For(x => x.Tab3)
            .Template(x => x.Grid, "_TabItem")
            //.Template(x => x.Search, "~/Views/Home/_Search.cshtml")
            //.Template(x => x.New, "~/Areas/Demo/Views/Contributors/Toolbar/_New.cshtml")
            .ConnectsWith(MenuTypes.PublicMenu);


        tab1.BulkMove = false;
        tab1.Toolbar.QuickSearch = true;
        tab2.Toolbar.QuickSearch = true;
        tab3.Toolbar.QuickSearch = true;

        cfg.Title = "Menu Items";

    })
        .ConfigureGroups(cfg =>
        {
            cfg.For(x => x.Group1)
                .DisplayText("Adauga la Public Menu")
                .DisplayName("Public Menu (FrontEnd)")
                .Template(x => x.Items, "_GroupItem");

            cfg.For(x => x.Group2)
                .DisplayText("Adauga la Users Menu")
                .DisplayName("Users Menu (Authentication Required)")
                .Template(x => x.Items, "_GroupItem");

            cfg.For(x => x.Group3)
                .DisplayText("Adauga la Admin Menu")
                .DisplayName("Admin Menu (BackEnd)")
                .Template(x => x.Items, "_GroupItem");

            cfg.Title = "Menus";
        })
        //.SaveUrl(Url.Action("Save"))
        .IgnoreAjaxRequest(false);

    ViewData["builder"] = builder;
}

@if (Model.Editor != null)
{
    Html.Partial("_GroupEditor", Model.Editor);
}

<script id="js-groupItem" type="text/x-icanhaz">

    <span>{{DisplayNameInternational}}</span>

</script>
